name: Deploy to EC2

on:
  push:
    branches:
      - main
      - feature/deployment

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get the app latest versions
        id: versions
        run: |
          FRONT_VERSION=$(curl -s https://api.github.com/repos/a-deux-pas/front-a-deux-pas/releases/latest | jq -r '.tag_name | select(startswith("v"))')
          BACK_VERSION=$(curl -s https://api.github.com/repos/a-deux-pas/back-a-deux-pas/releases/latest | jq -r '.tag_name | select(startswith("v"))')
          echo "FRONT_VERSION=${FRONT_VERSION#v}" >> $GITHUB_OUTPUT
          echo "BACK_VERSION=${BACK_VERSION#v}" >> $GITHUB_OUTPUT

      # Crée le répertoire .ssh si nécessaire
      # Ajoute la clé de l'hôte au fichier known_hosts
      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts

      - name: Deploy to EC2
        env:
          HOST: ${{ secrets.EC2_HOST }}
          USER: ${{ secrets.EC2_USER }}
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          FRONT_VERSION: ${{ steps.versions.outputs.FRONT_VERSION }}
          BACK_VERSION: ${{ steps.versions.outputs.BACK_VERSION }}
          MYSQL_HOST: ${{ secrets.MYSQL_HOST }}
          MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}
          MYSQL_USER: ${{ secrets.MYSQL_USER }}
          MYSQL_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}
        run: |
          scp docker-compose.yml ${USER}@${HOST}:~/app/
          ssh ${USER}@${HOST} '
            cd ~/app
            echo "DOCKER_USERNAME=${{ secrets.DOCKER_USERNAME }}" > .env
            echo "FRONT_VERSION=${{ env.FRONT_VERSION }}" >> .env
            echo "BACK_VERSION=${{ env.BACK_VERSION }}" >> .env
            echo "MYSQL_HOST=${{ secrets.MYSQL_HOST }}" >> .env
            echo "MYSQL_ROOT_PASSWORD=${{ secrets.MYSQL_ROOT_PASSWORD }}" >> .env
            echo "MYSQL_USER=${{ secrets.MYSQL_USER }}" >> .env
            echo "MYSQL_PASSWORD=${{ secrets.MYSQL_PASSWORD }}" >> .env
            docker-compose up -d
          '
